{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DisplayTasksComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelement(1, \"td\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r1.taskName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.taskPriority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.taskStatus ? \"Done\" : \"Pending\");\n  }\n}\nexport class DisplayTasksComponent {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n  }\n  ngOnInit() {\n    this.httpclient.get(\"http://localhost:3000/allTasks\").subscribe(data => {\n      this.tasksData = data;\n      console.log(\"Tasks Data received: \" + this.tasksData);\n    });\n  }\n  static {\n    this.ɵfac = function DisplayTasksComponent_Factory(t) {\n      return new (t || DisplayTasksComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DisplayTasksComponent,\n      selectors: [[\"app-display-tasks\"]],\n      decls: 14,\n      vars: 1,\n      consts: [[\"border\", \"1\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function DisplayTasksComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"All Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"th\");\n          i0.ɵɵtext(5, \" Task ID \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"th\");\n          i0.ɵɵtext(7, \" Task Name \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"th\");\n          i0.ɵɵtext(9, \" Task Priority \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \" Task Status \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, DisplayTasksComponent_tr_13_Template, 8, 3, \"tr\", 1);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasksData);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","taskName","taskPriority","taskStatus","DisplayTasksComponent","constructor","httpclient","ngOnInit","get","subscribe","data","tasksData","console","log","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DisplayTasksComponent_Template","rf","ctx","ɵɵtemplate","DisplayTasksComponent_tr_13_Template","ɵɵproperty"],"sources":["C:\\Node_Practise_Space\\MEAN-stack-prac\\6.Task-Manager-App\\Frontend\\task-app\\src\\app\\display-tasks\\display-tasks.component.ts","C:\\Node_Practise_Space\\MEAN-stack-prac\\6.Task-Manager-App\\Frontend\\task-app\\src\\app\\display-tasks\\display-tasks.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-display-tasks',\n  templateUrl: './display-tasks.component.html',\n  styleUrls: ['./display-tasks.component.css']\n})\nexport class DisplayTasksComponent {\n  tasksData:any;\n  constructor(private httpclient:HttpClient){\n  }\n  ngOnInit(){\n    this.httpclient.get(\"http://localhost:3000/allTasks\")\n    .subscribe(data=>{\n      this.tasksData=data;\n      console.log(\"Tasks Data received: \"+ this.tasksData);\n    })\n  }\n}\n","<h2>All Tasks</h2>\n<table border=\"1\">\n    <thead>\n        <th> Task ID </th>\n        <th> Task Name </th>\n        <th> Task Priority </th>\n        <th> Task Status </th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let task of tasksData\">\n            <td></td>\n            <td>{{task.taskName}}</td>\n            <td>{{task.taskPriority}}</td>\n            <td>{{task.taskStatus?\"Done\":\"Pending\"}}</td>\n        </tr>\n    </tbody>\n</table>"],"mappings":";;;;;ICSQA,EAAA,CAAAC,cAAA,SAAmC;IAC/BD,EAAA,CAAAE,SAAA,SAAS;IACTF,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,GAAiB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC1BJ,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,GAAqB;IAAAH,EAAA,CAAAI,YAAA,EAAK;IAC9BJ,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAG,MAAA,GAAoC;IAAAH,EAAA,CAAAI,YAAA,EAAK;;;;IAFzCJ,EAAA,CAAAK,SAAA,GAAiB;IAAjBL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAC,QAAA,CAAiB;IACjBR,EAAA,CAAAK,SAAA,GAAqB;IAArBL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAE,YAAA,CAAqB;IACrBT,EAAA,CAAAK,SAAA,GAAoC;IAApCL,EAAA,CAAAM,iBAAA,CAAAC,OAAA,CAAAG,UAAA,sBAAoC;;;ADLpD,OAAM,MAAOC,qBAAqB;EAEhCC,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;EAC9B;EACAC,QAAQA,CAAA;IACN,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,gCAAgC,CAAC,CACpDC,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACC,SAAS,GAACD,IAAI;MACnBE,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAE,IAAI,CAACF,SAAS,CAAC;IACtD,CAAC,CAAC;EACJ;;;uBAVWP,qBAAqB,EAAAX,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAArBZ,qBAAqB;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRlC9B,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAG,MAAA,gBAAS;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAClBJ,EAAA,CAAAC,cAAA,eAAkB;UAELD,EAAA,CAAAG,MAAA,gBAAQ;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAClBJ,EAAA,CAAAC,cAAA,SAAI;UAACD,EAAA,CAAAG,MAAA,kBAAU;UAAAH,EAAA,CAAAI,YAAA,EAAK;UACpBJ,EAAA,CAAAC,cAAA,SAAI;UAACD,EAAA,CAAAG,MAAA,sBAAc;UAAAH,EAAA,CAAAI,YAAA,EAAK;UACxBJ,EAAA,CAAAC,cAAA,UAAI;UAACD,EAAA,CAAAG,MAAA,qBAAY;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAE1BJ,EAAA,CAAAC,cAAA,aAAO;UACHD,EAAA,CAAAgC,UAAA,KAAAC,oCAAA,gBAKK;UACTjC,EAAA,CAAAI,YAAA,EAAQ;;;UANiBJ,EAAA,CAAAK,SAAA,IAAY;UAAZL,EAAA,CAAAkC,UAAA,YAAAH,GAAA,CAAAb,SAAA,CAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}